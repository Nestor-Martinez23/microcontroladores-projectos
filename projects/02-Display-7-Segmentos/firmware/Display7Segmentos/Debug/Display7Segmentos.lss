
Display7Segmentos.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000024e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002a2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a9f  00000000  00000000  00000384  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006bb  00000000  00000000  00000e23  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004ad  00000000  00000000  000014de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c4  00000000  00000000  0000198c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000046a  00000000  00000000  00001a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000356  00000000  00000000  00001eba  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002210  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <main>
  78:	0c 94 25 01 	jmp	0x24a	; 0x24a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <Muestra_E>:
		}
	}
}

void Muestra_E(void){
	SEGS_PORTD |= (1 << SEG_A) | (1 << SEG_F) | (1 << SEG_G) | (1 << SEG_E) | (1 << SEG_D);
  80:	8b b1       	in	r24, 0x0b	; 11
  82:	82 6f       	ori	r24, 0xF2	; 242
  84:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	2f ef       	ldi	r18, 0xFF	; 255
  88:	85 ea       	ldi	r24, 0xA5	; 165
  8a:	9e e0       	ldi	r25, 0x0E	; 14
  8c:	21 50       	subi	r18, 0x01	; 1
  8e:	80 40       	sbci	r24, 0x00	; 0
  90:	90 40       	sbci	r25, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <Muestra_E+0xc>
  94:	00 c0       	rjmp	.+0      	; 0x96 <Muestra_E+0x16>
  96:	00 00       	nop
  98:	08 95       	ret

0000009a <Muestra_1>:
	_delay_ms(300);
}

void Muestra_1(void){
	SEGS_PORTD |= (1 << SEG_B) | (1 << SEG_C);
  9a:	8b b1       	in	r24, 0x0b	; 11
  9c:	8c 60       	ori	r24, 0x0C	; 12
  9e:	8b b9       	out	0x0b, r24	; 11
  a0:	2f ef       	ldi	r18, 0xFF	; 255
  a2:	85 ea       	ldi	r24, 0xA5	; 165
  a4:	9e e0       	ldi	r25, 0x0E	; 14
  a6:	21 50       	subi	r18, 0x01	; 1
  a8:	80 40       	sbci	r24, 0x00	; 0
  aa:	90 40       	sbci	r25, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <Muestra_1+0xc>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <Muestra_1+0x16>
  b0:	00 00       	nop
  b2:	08 95       	ret

000000b4 <Muestra_2>:
	_delay_ms(300);
}

void Muestra_2(void){
	SEGS_PORTD |= (1 << SEG_A) | (1 << SEG_B) | (1 << SEG_G) | (1 << SEG_E) | (1 << SEG_D);
  b4:	8b b1       	in	r24, 0x0b	; 11
  b6:	86 6b       	ori	r24, 0xB6	; 182
  b8:	8b b9       	out	0x0b, r24	; 11
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	85 ea       	ldi	r24, 0xA5	; 165
  be:	9e e0       	ldi	r25, 0x0E	; 14
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	80 40       	sbci	r24, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <Muestra_2+0xc>
  c8:	00 c0       	rjmp	.+0      	; 0xca <Muestra_2+0x16>
  ca:	00 00       	nop
  cc:	08 95       	ret

000000ce <Muestra_P>:
	_delay_ms(300);
}

void Muestra_P(void){
	SEGS_PORTD |= (1 << SEG_A) | (1 << SEG_B) | (1 << SEG_G) | (1 << SEG_F) | (1 << SEG_E);
  ce:	8b b1       	in	r24, 0x0b	; 11
  d0:	86 6e       	ori	r24, 0xE6	; 230
  d2:	8b b9       	out	0x0b, r24	; 11
  d4:	2f ef       	ldi	r18, 0xFF	; 255
  d6:	85 ea       	ldi	r24, 0xA5	; 165
  d8:	9e e0       	ldi	r25, 0x0E	; 14
  da:	21 50       	subi	r18, 0x01	; 1
  dc:	80 40       	sbci	r24, 0x00	; 0
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <Muestra_P+0xc>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <Muestra_P+0x16>
  e4:	00 00       	nop
  e6:	08 95       	ret

000000e8 <Muestra_F>:
	_delay_ms(300);
}

void Muestra_F(void){
	SEGS_PORTD |= (1 << SEG_A) | (1 << SEG_G) | (1 << SEG_F) | (1 << SEG_E);
  e8:	8b b1       	in	r24, 0x0b	; 11
  ea:	82 6e       	ori	r24, 0xE2	; 226
  ec:	8b b9       	out	0x0b, r24	; 11
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	85 ea       	ldi	r24, 0xA5	; 165
  f2:	9e e0       	ldi	r25, 0x0E	; 14
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <Muestra_F+0xc>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <Muestra_F+0x16>
  fe:	00 00       	nop
 100:	08 95       	ret

00000102 <Estado_Centro_Orilla>:
	_delay_ms(300);
}

// Funciones Estado Leds
void Estado_Centro_Orilla(void){
	LEDS_PORTB |= (1 << LED_2) | (1 << LED_3);
 102:	85 b1       	in	r24, 0x05	; 5
 104:	8c 60       	ori	r24, 0x0C	; 12
 106:	85 b9       	out	0x05, r24	; 5
 108:	2f ef       	ldi	r18, 0xFF	; 255
 10a:	83 ed       	ldi	r24, 0xD3	; 211
 10c:	90 e3       	ldi	r25, 0x30	; 48
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <Estado_Centro_Orilla+0xc>
 116:	00 c0       	rjmp	.+0      	; 0x118 <Estado_Centro_Orilla+0x16>
 118:	00 00       	nop
	_delay_ms(TIME);
	
	LEDS_PORTB &= ~((1 << LED_2) | (1 << LED_3));
 11a:	85 b1       	in	r24, 0x05	; 5
 11c:	83 7f       	andi	r24, 0xF3	; 243
 11e:	85 b9       	out	0x05, r24	; 5
	LEDS_PORTB |= (1 << LED_1) | (1 << LED_4);
 120:	85 b1       	in	r24, 0x05	; 5
 122:	82 61       	ori	r24, 0x12	; 18
 124:	85 b9       	out	0x05, r24	; 5
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	83 ed       	ldi	r24, 0xD3	; 211
 12a:	90 e3       	ldi	r25, 0x30	; 48
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <Estado_Centro_Orilla+0x2a>
 134:	00 c0       	rjmp	.+0      	; 0x136 <Estado_Centro_Orilla+0x34>
 136:	00 00       	nop
	
	_delay_ms(TIME);
	LEDS_PORTB &= ~((1 << LED_1) | (1 << LED_4));
 138:	85 b1       	in	r24, 0x05	; 5
 13a:	8d 7e       	andi	r24, 0xED	; 237
 13c:	85 b9       	out	0x05, r24	; 5
 13e:	08 95       	ret

00000140 <Estado_Derecha_Izquierda>:
}

void Estado_Derecha_Izquierda(void){
	int8_t i = LED_1;
 140:	81 e0       	ldi	r24, 0x01	; 1
	while(i <= LED_4) {
 142:	13 c0       	rjmp	.+38     	; 0x16a <Estado_Derecha_Izquierda+0x2a>
		LEDS_PORTB = (1 << i);
 144:	21 e0       	ldi	r18, 0x01	; 1
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	08 2e       	mov	r0, r24
 14a:	02 c0       	rjmp	.+4      	; 0x150 <Estado_Derecha_Izquierda+0x10>
 14c:	22 0f       	add	r18, r18
 14e:	33 1f       	adc	r19, r19
 150:	0a 94       	dec	r0
 152:	e2 f7       	brpl	.-8      	; 0x14c <Estado_Derecha_Izquierda+0xc>
 154:	25 b9       	out	0x05, r18	; 5
 156:	2f ef       	ldi	r18, 0xFF	; 255
 158:	33 ed       	ldi	r19, 0xD3	; 211
 15a:	90 e3       	ldi	r25, 0x30	; 48
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	30 40       	sbci	r19, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <Estado_Derecha_Izquierda+0x1c>
 164:	00 c0       	rjmp	.+0      	; 0x166 <Estado_Derecha_Izquierda+0x26>
 166:	00 00       	nop
		_delay_ms(TIME);
		i++;
 168:	8f 5f       	subi	r24, 0xFF	; 255
	LEDS_PORTB &= ~((1 << LED_1) | (1 << LED_4));
}

void Estado_Derecha_Izquierda(void){
	int8_t i = LED_1;
	while(i <= LED_4) {
 16a:	85 30       	cpi	r24, 0x05	; 5
 16c:	5c f3       	brlt	.-42     	; 0x144 <Estado_Derecha_Izquierda+0x4>
		LEDS_PORTB = (1 << i);
		_delay_ms(TIME);
		i++;
	}
}
 16e:	08 95       	ret

00000170 <Estado_Izquierda_Derecha>:

void Estado_Izquierda_Derecha(void){
	int8_t i = LED_4;
 170:	84 e0       	ldi	r24, 0x04	; 4
	while(i >= LED_1) {
 172:	13 c0       	rjmp	.+38     	; 0x19a <Estado_Izquierda_Derecha+0x2a>
		LEDS_PORTB = (1 << i);
 174:	21 e0       	ldi	r18, 0x01	; 1
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	08 2e       	mov	r0, r24
 17a:	02 c0       	rjmp	.+4      	; 0x180 <Estado_Izquierda_Derecha+0x10>
 17c:	22 0f       	add	r18, r18
 17e:	33 1f       	adc	r19, r19
 180:	0a 94       	dec	r0
 182:	e2 f7       	brpl	.-8      	; 0x17c <Estado_Izquierda_Derecha+0xc>
 184:	25 b9       	out	0x05, r18	; 5
 186:	2f ef       	ldi	r18, 0xFF	; 255
 188:	33 ed       	ldi	r19, 0xD3	; 211
 18a:	90 e3       	ldi	r25, 0x30	; 48
 18c:	21 50       	subi	r18, 0x01	; 1
 18e:	30 40       	sbci	r19, 0x00	; 0
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <Estado_Izquierda_Derecha+0x1c>
 194:	00 c0       	rjmp	.+0      	; 0x196 <Estado_Izquierda_Derecha+0x26>
 196:	00 00       	nop
		_delay_ms(TIME);
		i--;
 198:	81 50       	subi	r24, 0x01	; 1
	}
}

void Estado_Izquierda_Derecha(void){
	int8_t i = LED_4;
	while(i >= LED_1) {
 19a:	18 16       	cp	r1, r24
 19c:	5c f3       	brlt	.-42     	; 0x174 <Estado_Izquierda_Derecha+0x4>
		LEDS_PORTB = (1 << i);
		_delay_ms(TIME);
		i--;
	}
}
 19e:	08 95       	ret

000001a0 <Estado_Todos_Parpadean>:
 1a0:	2f ef       	ldi	r18, 0xFF	; 255
 1a2:	83 ed       	ldi	r24, 0xD3	; 211
 1a4:	90 e3       	ldi	r25, 0x30	; 48
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <Estado_Todos_Parpadean+0x6>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <Estado_Todos_Parpadean+0x10>
 1b0:	00 00       	nop

void Estado_Todos_Parpadean(void){
	_delay_ms(TIME);
	LEDS_PORTB = 0x1E;
 1b2:	8e e1       	ldi	r24, 0x1E	; 30
 1b4:	85 b9       	out	0x05, r24	; 5
 1b6:	2f ef       	ldi	r18, 0xFF	; 255
 1b8:	83 ed       	ldi	r24, 0xD3	; 211
 1ba:	90 e3       	ldi	r25, 0x30	; 48
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <Estado_Todos_Parpadean+0x1c>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <Estado_Todos_Parpadean+0x26>
 1c6:	00 00       	nop
	_delay_ms(TIME);
	LEDS_PORTB = 0x00;
 1c8:	15 b8       	out	0x05, r1	; 5
 1ca:	08 95       	ret

000001cc <Estado_Todos_Encendidos>:
}

void Estado_Todos_Encendidos(void){
	LEDS_PORTB = 0x1E;
 1cc:	8e e1       	ldi	r24, 0x1E	; 30
 1ce:	85 b9       	out	0x05, r24	; 5
 1d0:	08 95       	ret

000001d2 <main>:
void Estado_Izquierda_Derecha(void);
void Estado_Todos_Parpadean(void);
void Estado_Todos_Encendidos(void);

int main(void){
	SEGS_DDRD = 0xFE; // DDRD1-DDRD7 Salidas
 1d2:	8e ef       	ldi	r24, 0xFE	; 254
 1d4:	8a b9       	out	0x0a, r24	; 10
	LEDS_DDRB = 0x1E; // DDRB1-DDRB4 Salidas
 1d6:	8e e1       	ldi	r24, 0x1E	; 30
 1d8:	84 b9       	out	0x04, r24	; 4
	BOTONES_DDRC = 0x00;
 1da:	17 b8       	out	0x07, r1	; 7
	LEDS_PORTB = 0x00;
 1dc:	15 b8       	out	0x05, r1	; 5
	
	while (1) {
		
		SEGS_PORTD = 0x00;
 1de:	1b b8       	out	0x0b, r1	; 11
		BOTONES_PORTC = 0x0E;
 1e0:	8e e0       	ldi	r24, 0x0E	; 14
 1e2:	88 b9       	out	0x08, r24	; 8
		

		if (BOTONES_000) {
 1e4:	31 99       	sbic	0x06, 1	; 6
 1e6:	09 c0       	rjmp	.+18     	; 0x1fa <main+0x28>
 1e8:	32 99       	sbic	0x06, 2	; 6
 1ea:	07 c0       	rjmp	.+14     	; 0x1fa <main+0x28>
 1ec:	33 99       	sbic	0x06, 3	; 6
 1ee:	05 c0       	rjmp	.+10     	; 0x1fa <main+0x28>
			Muestra_E();
 1f0:	0e 94 40 00 	call	0x80	; 0x80 <Muestra_E>
			Estado_Centro_Orilla();
 1f4:	0e 94 81 00 	call	0x102	; 0x102 <Estado_Centro_Orilla>
 1f8:	f2 cf       	rjmp	.-28     	; 0x1de <main+0xc>
			
		}
		else if (BOTONES_001) {
 1fa:	31 99       	sbic	0x06, 1	; 6
 1fc:	09 c0       	rjmp	.+18     	; 0x210 <main+0x3e>
 1fe:	32 99       	sbic	0x06, 2	; 6
 200:	07 c0       	rjmp	.+14     	; 0x210 <main+0x3e>
 202:	33 9b       	sbis	0x06, 3	; 6
 204:	05 c0       	rjmp	.+10     	; 0x210 <main+0x3e>
			Muestra_1();
 206:	0e 94 4d 00 	call	0x9a	; 0x9a <Muestra_1>
			Estado_Derecha_Izquierda();
 20a:	0e 94 a0 00 	call	0x140	; 0x140 <Estado_Derecha_Izquierda>
 20e:	e7 cf       	rjmp	.-50     	; 0x1de <main+0xc>

		}
		else if (BOTONES_010) {
 210:	31 99       	sbic	0x06, 1	; 6
 212:	09 c0       	rjmp	.+18     	; 0x226 <main+0x54>
 214:	32 9b       	sbis	0x06, 2	; 6
 216:	07 c0       	rjmp	.+14     	; 0x226 <main+0x54>
 218:	33 99       	sbic	0x06, 3	; 6
 21a:	05 c0       	rjmp	.+10     	; 0x226 <main+0x54>
			Muestra_2();
 21c:	0e 94 5a 00 	call	0xb4	; 0xb4 <Muestra_2>
			Estado_Izquierda_Derecha();
 220:	0e 94 b8 00 	call	0x170	; 0x170 <Estado_Izquierda_Derecha>
 224:	dc cf       	rjmp	.-72     	; 0x1de <main+0xc>

		}
		else if (BOTONES_011) {
 226:	31 99       	sbic	0x06, 1	; 6
 228:	09 c0       	rjmp	.+18     	; 0x23c <main+0x6a>
 22a:	32 9b       	sbis	0x06, 2	; 6
 22c:	07 c0       	rjmp	.+14     	; 0x23c <main+0x6a>
 22e:	33 9b       	sbis	0x06, 3	; 6
 230:	05 c0       	rjmp	.+10     	; 0x23c <main+0x6a>
			Muestra_P();
 232:	0e 94 67 00 	call	0xce	; 0xce <Muestra_P>
			Estado_Todos_Parpadean();
 236:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <Estado_Todos_Parpadean>
 23a:	d1 cf       	rjmp	.-94     	; 0x1de <main+0xc>
		}
		else if (BOTONES_100){
 23c:	31 9b       	sbis	0x06, 1	; 6
 23e:	cf cf       	rjmp	.-98     	; 0x1de <main+0xc>
			Muestra_F();
 240:	0e 94 74 00 	call	0xe8	; 0xe8 <Muestra_F>
			Estado_Todos_Encendidos();
 244:	0e 94 e6 00 	call	0x1cc	; 0x1cc <Estado_Todos_Encendidos>
 248:	ca cf       	rjmp	.-108    	; 0x1de <main+0xc>

0000024a <_exit>:
 24a:	f8 94       	cli

0000024c <__stop_program>:
 24c:	ff cf       	rjmp	.-2      	; 0x24c <__stop_program>
